#include <bits/stdc++.h>

using namespace std;
int input(){
    int res = 0; char c = ' ';
    while (c < '0') c = getchar();
    while (c >= '0') res = res * 10 + (c - '0'), c = getchar();
    return res;
}
const int N = 1e5 + 1;

int p[N], o[N];
int root(int x){
    return p[x] == x ? x : p[x] = root(p[x]);
}
void unite(int x, int y){
    x = root(x), y = root(y);
    if (o[x] > o[y]) p[y] = x;
    else if (o[x] < o[y]) p[x] = y;
        else ++ o[x], p[y] = x;
}

char us[N];
vector <int> r[N];
int ans[N], anc[N];
pair <int, int> q[N];
vector <pair <int, int> > g[N];

void rec(int u, int p){
    for (auto c : g[u]){
        int v, par;
        if ((v = c.first) == p) continue;
        rec(v, u);
        anc[par = root(v)] = u, unite(u, par);
    }
    us[u] = 1;
    for (auto i : r[u]){
        int v = (q[i].first == u ? q[i].second : q[i].first);
        if (us[v]) ans[i] = anc[root(v)];
    }
}

int main(){
    int n = input(), m = input();
    for (int i = 0; i < n - 1; ++ i){
        p[i + 1] = anc[i + 1] = i + 1;
        int u = input() - 1, v = input() - 1;
        g[u].push_back({v, i}), g[v].push_back({u, i});
    }
    for (int i = 0, u, v; i < m; ++ i){
        q[i] = {u = input() - 1, v = input() - 1};
        r[u].push_back(i), r[v].push_back(i);
    }
    rec(0, 0);
    for (int i = 0; i < m; ++ i)
        cout << ans[i] + 1 << "\n";
}
